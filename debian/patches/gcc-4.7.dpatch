#! /bin/sh /usr/share/dpatch/dpatch-run
## gcc-4.7.dpatch by Andreas Tille <tille@debian.org>
##
## DP: Try to fix Build issue with gcc-4.7 ... but failed :-(

@DPATCH@
diff -urNad poco-1.3.6p1~/Foundation/include/Poco/String.h poco-1.3.6p1/Foundation/include/Poco/String.h
--- poco-1.3.6p1~/Foundation/include/Poco/String.h
+++ poco-1.3.6p1/Foundation/include/Poco/String.h
@@ -451,12 +451,13 @@
 
 
 template <class S>
-S& replaceInPlace(S& str, const S& from, const S& to, typename S::size_type start = 0)
+S& replaceInPlace(S& str, const typename S::value_type* from, const typename S::value_type* to, typename S::size_type start = 0)
 {
-	poco_assert (from.size() > 0);
-	
+	poco_assert (*from);
+
 	S result;
 	typename S::size_type pos = 0;
+	typename S::size_type fromLen = std::strlen(from);
 	result.append(str, 0, start);
 	do
 	{
@@ -465,7 +466,7 @@
 		{
 			result.append(str, start, pos - start);
 			result.append(to);
-			start = pos + from.length();
+			start = pos + fromLen;
 		}
 		else result.append(str, start, str.size() - start);
 	}
@@ -476,13 +477,12 @@
 
 
 template <class S>
-S& replaceInPlace(S& str, const typename S::value_type* from, const typename S::value_type* to, typename S::size_type start = 0)
+S& replaceInPlace(S& str, const S& from, const S& to, typename S::size_type start = 0)
 {
-	poco_assert (*from);
-
+	poco_assert (from.size() > 0);
+	
 	S result;
 	typename S::size_type pos = 0;
-	typename S::size_type fromLen = std::strlen(from);
 	result.append(str, 0, start);
 	do
 	{
@@ -491,7 +491,7 @@
 		{
 			result.append(str, start, pos - start);
 			result.append(to);
-			start = pos + fromLen;
+			start = pos + from.length();
 		}
 		else result.append(str, start, str.size() - start);
 	}
