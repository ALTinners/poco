#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# Include dpatch
include /usr/share/dpatch/dpatch.make

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CONFFLAGS := --prefix=/usr --no-samples

# On ARM define POCO_NO_FPENVIRONMENT
ifeq ($(shell dpkg --print-architecture),arm)
CONFFLAGS += --no-fpenvironment
endif

config.status: patch configure
	dh_testdir
	./configure $(CONFFLAGS)

build: build-stamp
build-stamp: config.status
	dh_testdir
	mkdir -p libs
	$(MAKE)
	touch $@

clean: clean-patched unpatch
clean-patched:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	$(MAKE) distclean
	rm -f config.make
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	$(MAKE) DESTDIR=$(CURDIR)/debian/tmp install

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs CHANGELOG
	dh_installdocs
	dh_install --sourcedir=debian/tmp
# generate lintian overrides for -dbg packages
	( cd debian ; for i in *-dbg/usr/lib/*.so.* ; do override=`echo $$i | sed 's|/usr/lib/|: package-name-doesnt-match-sonames |' | sed 's/\.so\.//'` ; pkg=`echo $$i | sed 's|/usr/.*||'` ; dir=`echo $$pkg/usr/share/lintian/overrides` ; mkdir -p $$dir ; file=$$dir/$$pkg ; echo $$override > $$file ; done )
# remove Mac OS X related files (.DS_Store and ._.DS_Store)
	rm -f debian/libpoco-dev/usr/include/Poco/.DS_Store debian/libpoco-dev/usr/include/Poco/._.DS_Store
	dh_link
	dh_strip -k
	dh_compress
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
